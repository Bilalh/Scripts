#!/bin/sh
#Bilal Hussain

showHelp () {
	echo "-----------------------------";
	echo "iTunes Terminal";
	echo "-----------------------------";
	echo "Usage: `basename $0` <option>";
	echo;
    echo "Options: (short)";
    echo " (s) status        = Shows iTunes' status, and track info";
    echo " (y) play          = Start playing.";
    echo " (a) pause         = Pause iTunes.";
    echo " (p) playpause     = Start playing / pauses.";
    echo " (n) next          = Go to the next track.";
    echo " (b) prev          = Go to the previous track.";
    echo " (r) rewind        = Rewinds the current trac.";
    echo " (m) mute          = Mute iTunes' volume.";
    echo " (e) unmute        = Unmute iTunes' volume.";
    echo " (l) playlist      = plays the specified playlist ";
    echo " (v) vol up        = Increase iTunes' volume by 10%";
    echo " (v) vol down      = Increase iTunes' volume by 10%";
    echo " (v) vol #         = Set iTunes' volume to # [0-100]";
    echo "     [0-5] {force} = Set the current song rating" ;
    echo " (6) 4.5   {force} = Set the current song rating to 4½ stars" ;

    echo " (t) stop          = Stop iTunes.";
    echo " (q) quit          = Quit iTunes.";
}

#fixme shows error on end of playlist
current_song(){
	printf " Track: %s %s \n Album: %s\n Artist: %s\n" \
		"`osascript -e 'tell application \"iTunes\" to name of current track as string'`"\
		"`osascript -e 'tell application \"iTunes\" to rating of current track as string'`"\
		"`osascript -e 'tell application \"iTunes\" to album of current track as string'`"\
		"`osascript -e 'tell application \"iTunes\" to artist of current track as string'`"
}

state(){
	state=`osascript -e 'tell application "iTunes" to player state as string'`;
	echo "iTunes is currently $state.";
	if [ $state = "playing" ]; then
		current_song
	fi
}

if [ $# = 0 ]; then
	showHelp;
fi

while [ $# -gt 0 ]; do
	arg=$1;
	case $arg in
		"status" | "s" ) state;
			break ;;
		
		"playpause" | "p" ) echo "Changing PlayState";
			osascript -e 'tell application "iTunes" to playpause';
			break ;;
			
		"play" | "y"  ) echo "Playing iTunes.";
			osascript -e 'tell application "iTunes" to play';
			break ;;

		"pause" | "a" ) echo "Pausing iTunes.";
			osascript -e 'tell application "iTunes" to pause';
			break ;;

		"next" | "n"  ) echo "Going to next track." ;
			osascript -e 'tell application "iTunes" to next track';
			current_song
			break ;;

		"prev" | "b" | "back" ) echo "Going to previous track.";
			osascript -e 'tell application "iTunes" to previous track';
			break ;;
		"rewind" | "r" ) echo "Rewinding track.";
			osascript -e 'tell application "iTunes" to back track';
			break ;;

		"mute" | "m"   ) echo "Muting iTunes volume level.";
			osascript -e 'tell application "iTunes" to set mute to true';
			break ;;

		"unmute" | "e" ) echo "Unmuting iTunes volume level.";
			osascript -e 'tell application "iTunes" to set mute to false';
			break ;;

		"vol" | "v"    ) echo "Changing iTunes volume level.";
			vol=`osascript -e 'tell application "iTunes" to sound volume as integer'`;
			if [ $2 = "up" ]; then
				newvol=$(( vol+10 ));
			fi

			if [ $2 = "down" ]; then
				newvol=$(( vol-10 ));
			fi

			if [ $2 -gt 0 ]; then
				newvol=$2;
			fi
			osascript -e "tell application \"iTunes\" to set sound volume to $newvol";
			break ;;
		
		"playlist" | l ) 
			if [ $# -gt 1 ]; then
				echo "Playing $2";
				osascript -e "tell application \"iTunes\" to play playlist \"$2\""
			fi
			break ;;
			
		[0-5] ) echo "Set rating to $arg stars"
			current_song
			RATE=0
			
			if [ $# -gt 1 ]; then
				RATE=1
			else
				select ANS in "Yes" "No"; do
					if [ "${ANS}" == "Yes" ]; then
						RATE=1
					fi;
					break;
				done;
			fi
			
			if [ ${RATE} -eq 1 ]; then
				osascript -e 'tell application "iTunes"' -e \
					"set the rating of the current track to $((${arg}*20)) as integer"\
				-e 'end tell';
			fi
			break ;;
		
		# bash does not do floating points calc
		"4.5" | 6) echo "Set rating to 4½ stars"
		current_song
		RATE=0
		
		if [ $# -gt 1 ]; then
			RATE=1
		else
			select ANS in "Yes" "No"; do
				if [ "${ANS}" == "Yes" ]; then
					RATE=1
				fi;
				break;
			done;
		fi
		
		if [ ${RATE} -eq 1 ]; then
			osascript -e 'tell application "iTunes"' -e \
				"set the rating of the current track to 90 as integer"\
			-e 'end tell';
		fi
		break ;;
	
		"stop" | "t" ) echo "Stopping iTunes.";
			osascript -e 'tell application "iTunes" to stop';
			break ;;
			
		"quit" | "q" ) echo "Quitting iTunes.";
			osascript -e 'tell application "iTunes" to quit';
			exit 1 ;;

		"u"        ) 
			if [ $# -gt 1 ]; then
				echo "Playing µ$2";
				osascript -e "tell application \"iTunes\" to play playlist \"µ$2\""
			fi
			break ;;
		"o"        ) 
			if [ $# -gt 1 ]; then
				echo "Playing Ω$2";
				osascript -e "tell application \"iTunes\" to play playlist \"Ω$2\""
			fi
			break ;;

		"help" | * ) echo "help:";
			showHelp;
			break ;;
	esac
done